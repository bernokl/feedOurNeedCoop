#+TITLE: Buid Cardano Stake Pool Ubuntu

Goal translate this [How to](https://cardano-foundation.gitbook.io/stake-pool-course/stake-pool-guide/getting-started/install-node) into Ubuntu install instructions

* Install dependencies
   #+begin_src tmux :session tmux-old-host
sudo apt update
   #+end_src
   #+begin_src tmux :session tmux-old-host
sudo apt upgrade
   #+end_src
   #+begin_src tmux :session tmux-old-host
sudo apt-get install build-essential pkg-config libffi-dev libgmp-dev -y
sudo apt-get install libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev -y
sudo apt-get install make g++ tmux git jq wget libncursesw5 libtool autoconf -y
   #+end_src

* Get cabal
   #+begin_src tmux :session tmux-old-host
wget https://downloads.haskell.org/~cabal/cabal-install-3.2.0.0/cabal-install-3.2.0.0-x86_64-unknown-linux.tar.xz
tar -xf cabal-install-3.2.0.0-x86_64-unknown-linux.tar.xz
rm cabal-install-3.2.0.0-x86_64-unknown-linux.tar.xz cabal.sig
mkdir -p ~/.local/bin
mv cabal ~/.local/bin/
   #+end_src

# Add this to the bottom of ~/.bashrc and source it
export PATH="~/.local/bin:$PATH"

  # Confirm
   #+begin_src tmux :session tmux-old-host
echo $PATH
   #+end_src
   #+begin_src tmux :session tmux-old-host
cabal update
   #+end_src
   #+begin_src tmux :session tmux-old-host
cabal --version
   #+end_src

* Download and install GHC
   #+begin_src tmux :session tmux-old-host
wget https://downloads.haskell.org/~ghc/8.10.2/ghc-8.10.2-x86_64-deb9-linux.tar.xz
tar -xf ghc-8.10.2-x86_64-deb9-linux.tar.xz
rm ghc-8.10.2-x86_64-deb9-linux.tar.xz
cd ghc-8.10.2
./configure
sudo make install
cd ..
   #+end_src
   #+begin_src tmux :session tmux-old-host
ghc --version
   #+end_src

* Install Libsodium
   #+begin_src tmux :session tmux-old-host
export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
git clone https://github.com/input-output-hk/libsodium
cd libsodium
git checkout 66f017f1
./autogen.sh
./configure
make
sudo make install
   #+end_src

* Download source code for cardan-node
   #+begin_src tmux :session tmux-old-host
cd
git clone https://github.com/input-output-hk/cardano-node.git
   #+end_src
   #+begin_src tmux :session tmux-old-host
ls cardano-node
   #+end_src
   #+begin_src tmux :session tmux-old-host
cd cardano-node
   #+end_src
   #+begin_src tmux :session tmux-old-host
git fetch --all --tags
   #+end_src
   #+begin_src tmux :session tmux-old-host
git tag
   #+end_src
   #+begin_src tmux :session tmux-old-host
git checkout tags/1.25.1
   #+end_src
   #+begin_src tmux :session tmux-old-host
cabal clean
cabal update
cabal build all
   #+end_src
# Copy the executable files to .local/bin
   #+begin_src tmux :session tmux-old-host
cp -p dist-newstyle/build/x86_64-linux/ghc-8.10.2/cardano-node-1.25.1/x/cardano-node/build/cardano-node/cardano-node ~/.local/bin/
   #+end_src
   #+begin_src tmux :session tmux-old-host
cp -p dist-newstyle/build/x86_64-linux/ghc-8.10.2/cardano-cli-1.25.1/x/cardano-cli/build/cardano-cli/cardano-cli ~/.local/bin/
   #+end_src
   #+begin_src tmux :session tmux-old-host
cardano-cli --version
   #+end_src
#   Make a backup
   #+begin_src tmux :session tmux-old-host
cd ~/.local/bin
cp cardano-cli cardano-cli-backup
cp cardano-node cardano-node-backup
   #+end_src

* Get configuration files
   #+begin_src tmux :session tmux-old-host
cd
mkdir relay
cd relay
   #+end_src

   #+begin_src tmux :session tmux-old-host
wget https://hydra.iohk.io/job/Cardano/cardano-node/cardano-deployment/latest-finished/download/1/testnet-config.json
wget https://hydra.iohk.io/job/Cardano/cardano-node/cardano-deployment/latest-finished/download/1/testnet-shelley-genesis.json
wget https://hydra.iohk.io/job/Cardano/cardano-node/cardano-deployment/latest-finished/download/1/testnet-byron-genesis.json
wget https://hydra.iohk.io/job/Cardano/cardano-node/cardano-deployment/latest-finished/download/1/testnet-topology.json
   #+end_src
* Generate some keys
   #+begin_src tmux :session tmux-old-host
cardano-cli node key-gen \
--cold-verification-key-file cold.vkey \
--cold-signing-key-file cold.skey \
--operational-certificate-issue-counter-file cold.counter
   #+end_src
* Start my node
   #+begin_src tmux :session tmux-old-host
cardano-node run \
--topology testnet-topology.json \
--database-path db \
--socket-path db/node.socket \
--host-addr 0.0.0.0 \
--port 3001 \
--config testnet-config.json
   #+end_src
